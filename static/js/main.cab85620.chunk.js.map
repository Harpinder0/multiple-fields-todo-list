{"version":3,"sources":["componets/Users.js","store/actions/action.js","componets/ModalBox.js","App.js","store/reducers/reducers.js","store/reducers/index.js","store/store.js","index.js"],"names":["Users","form","setIsModalVisible","setEditId","list","useSelector","state","reducers","dispatch","useDispatch","columns","title","key","render","elem","fname","lname","dataIndex","size","onConfirm","type","id","handleConfirm","okText","cancelText","onClick","data","setFieldsValue","number","dataSource","className","Modalbox","Form","useForm","useState","isModalVisible","editId","resetFields","visible","onOk","validateFields","formValues","getFieldsValue","payload","Date","getTime","toString","addUser","onCancel","autoComplete","Item","label","name","rules","required","message","placeholder","max","App","ModalBox","initialData","action","newList","filter","neList","map","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cab85620.chunk.js","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deleteUser } from \"../store/actions/action\";\n\n// antd\nimport { Popconfirm, Table, Space, Button } from \"antd\";\n\nconst Users = ({ form, setIsModalVisible, setEditId }) => {\n  const editDataOfRow = (data) => {\n    setEditId(data.id);\n    form.setFieldsValue(data);\n    setIsModalVisible(true);\n  };\n\n  const handleConfirm = (elem) => {\n    dispatch(deleteUser(elem.id));\n  };\n\n  const list = useSelector((state) => state.reducers.list);\n  const dispatch = useDispatch();\n\n  const columns = [\n    {\n      title: \"Full Name\",\n      key: \"fname\",\n      render: (elem) => `${elem.fname} ${elem.lname}`,\n    },\n    {\n      title: \"Number\",\n      dataIndex: \"number\",\n      key: \"number\",\n    },\n    {\n      title: \"Action\",\n      key: \"action\",\n      render: (elem) => (\n        <Space size=\"middle\">\n          <Popconfirm\n            onConfirm={() => handleConfirm(elem)}\n            title=\"Are you sureï¼Ÿ\"\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button> delete</Button>\n          </Popconfirm>\n          <Button onClick={() => editDataOfRow(elem)}> edit</Button>\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      {!list?.number && list[0]?.number ? (\n        <Table dataSource={list} columns={columns} />\n      ) : (\n        <h3 className=\"List\">No data</h3>\n      )}\n    </>\n  );\n};\n\nexport default Users;\n","export const addUser = ({id,fname, lname, number }) => {\n  return {\n    type: \"ADD_USER\",\n    payload: {\n      id: new Date().getTime().toString(),\n      fname: fname,\n      lname:lname,\n      number: number,\n    },\n  };\n};\n\nexport const deleteUser = (id) => {\n  return {\n    type: \"DELETE_USER\",\n    id,\n  };\n};\n\nexport const editUser = (data,id) => {\n  return {\n    type: \"EDIT_USER\",\n    key:id,\n    payload: data,\n  };\n};\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addUser, editUser } from \"../store/actions/action\";\n\n// antd\nimport { Modal, Button, Input, Form } from \"antd\";\n\n// componets\nimport Users from \"./Users\";\n\nconst Modalbox = () => {\n  const [form] = Form.useForm();\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [editId, setEditId] = useState();\n  const dispatch = useDispatch();\n\n  const showModal = () => {\n    setEditId(\"\");\n    form.resetFields();\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    form.validateFields();\n    const formValues = form.getFieldsValue();\n    if (editId) {\n      formValues.id = editId;\n      if(formValues.fname && formValues.lname && formValues.number) {\n        dispatch(editUser(formValues));\n        setIsModalVisible(false);\n      }\n      \n      \n    } else {\n      if (formValues.fname && formValues.lname && formValues.number) {\n        dispatch(addUser(formValues));\n        setIsModalVisible(false);\n      }\n    }\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return (\n    <>\n    <div className=\"modelBox\">\n      <Button type=\"primary\" onClick={showModal} >\n        Add User\n      </Button>\n      </div>\n      <Modal\n        title=\"Basic Modal\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <Form form={form} autoComplete=\"off\">\n          <Form.Item\n            label=\"First Name\"\n            name=\"fname\"\n            rules={[{ required: true, message: \"Please input First name!\" }]}\n          >\n            <Input type=\"text\" placeholder=\"Enter First Name\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Last Name\"\n            name=\"lname\"\n            rules={[{ required: true, message: \"Please input Last name!\" }]}\n          >\n            <Input type=\"text\" placeholder=\"Enter Last Name\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Number\"\n            name=\"number\"\n            rules={[\n              { required: true, message: \"Please input your Number!\", max: 10 },\n            ]}\n          >\n            <Input type=\"number\" placeholder=\"Enter Number\" />\n          </Form.Item>\n        </Form>\n      </Modal>\n      <Users\n        setEditId={setEditId}\n        setIsModalVisible={setIsModalVisible}\n        form={form}\n      />\n    </>\n  );\n};\n\nexport default Modalbox;\n","import './App.css';\nimport 'antd/dist/antd.css';\nimport ModalBox from './componets/ModalBox';\n\nfunction App() {\n\n  return (\n    <>\n    <div className=\"App\">\n    <ModalBox  />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const initialData = {\n  list: [],\n};\n\nconst reducers = (state = initialData, action) => {\n  switch (action.type) {\n    case \"ADD_USER\":\n      const { id, fname, lname, number } = action.payload;\n      return {\n        ...state,\n        list: [\n          ...state.list,\n          {\n            key: id,\n            id:id,\n            fname: fname,\n            lname: lname,\n            number: number,\n          },\n        ],\n      };\n\n    case \"DELETE_USER\":\n      const newList = state.list.filter((elem) => elem.id !== action.id);\n      return {\n        ...state,\n        list: newList,\n      };\n\n    case \"EDIT_USER\":\n      const neList = state.list.map((elem) =>\n        elem.id !== action.payload?.id ? elem : action.payload\n      );\n      return {\n        ...state,\n        list: neList,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducers;\n","import reducers from \"./reducers\";\nimport { combineReducers } from \"redux\";\n\n\nconst rootReducer = combineReducers({\n    reducers\n})\n\nexport default rootReducer;","import { createStore } from \"redux\";\n\nimport rootReducer from \"./reducers/index\";\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from \"./store/store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}